%qa.quarkus.http.port=8181
quarkus.http.cors=true
quarkus.http.cors.origins=http://example.com
quarkus.http.cors.methods=GET,PUT,POST,DELETE
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
#default one is 8081
quarkus.http.test-port=8083
#To create an über-JAR, a JAR that contains your code runnable classes and
#all required dependencies
#quarkus.package.type=uber-jar
# configure your datasource
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/mydatabase
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=update
#Go to src/main/resources
#keytool -genkey -keyalg RSA -alias selfsigned \
#-keystore keystore.jks -storepass changeit \
#-validity 360 -keysize 2048
#quarkus.http.ssl-port=8443
#quarkus.http.ssl.certificate.key-store-file=keystore.jks
#quarkus.http.ssl.certificate.key-store-file-type=jks
#quarkus.http.ssl.certificate.key-store-password=changeit
demo.string=World
demo.upper-case=false
com.gmail.deamon999.rest.WorldClockService/mp-rest/url=http://worldclockapi.com